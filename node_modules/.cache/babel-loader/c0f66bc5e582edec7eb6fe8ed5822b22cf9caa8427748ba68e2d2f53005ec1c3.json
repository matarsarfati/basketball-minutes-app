{"ast":null,"code":"var _jsxFileName = \"/Users/matarsarfati/Downloads/basketball-minutes-fixed/src/WellnessReport.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WellnessReport() {\n  _s();\n  const [data, setData] = useState([]);\n  const [dailyAverages, setDailyAverages] = useState({});\n  const [playerRollingAverages, setPlayerRollingAverages] = useState({});\n  const [teamRollingAverages, setTeamRollingAverages] = useState([]);\n  const sheetUrl = \"https://opensheet.elk.sh/1x1e53gsx3VzEJ5ON5QOvYeJTGI8auMtSxJYYpUUmreY/Wallnes\";\n  useEffect(() => {\n    fetch(sheetUrl).then(res => res.json()).then(json => {\n      const parsedData = json.map(entry => ({\n        name: entry[\"Name\"],\n        date: entry[\"Timestamp\"].split(\" \")[0],\n        sleep: Number(entry[\"What is the quality of your sleep at night?\"]),\n        sore: Number(entry[\"How sore are you?\"]),\n        fatigue: Number(entry[\"How Fatigued are you?\"])\n      })).filter(e => e.name && !isNaN(e.sleep) && !isNaN(e.sore) && !isNaN(e.fatigue));\n      setData(parsedData);\n\n      // Daily averages\n      const daily = {};\n      parsedData.forEach(e => {\n        if (!daily[e.date]) daily[e.date] = {\n          sleep: 0,\n          sore: 0,\n          fatigue: 0,\n          count: 0\n        };\n        daily[e.date].sleep += e.sleep;\n        daily[e.date].sore += e.sore;\n        daily[e.date].fatigue += e.fatigue;\n        daily[e.date].count++;\n      });\n      const dailyAvg = {};\n      Object.keys(daily).forEach(date => {\n        const d = daily[date];\n        dailyAvg[date] = {\n          sleep: (d.sleep / d.count).toFixed(2),\n          sore: (d.sore / d.count).toFixed(2),\n          fatigue: (d.fatigue / d.count).toFixed(2)\n        };\n      });\n      setDailyAverages(dailyAvg);\n\n      // Rolling average per player (2–10 days)\n      const byPlayer = {};\n      parsedData.forEach(e => {\n        if (!byPlayer[e.name]) byPlayer[e.name] = [];\n        byPlayer[e.name].push(e);\n      });\n      const playerRolling = {};\n      Object.entries(byPlayer).forEach(([name, entries]) => {\n        const sorted = [...entries].sort((a, b) => new Date(b.date) - new Date(a.date));\n        playerRolling[name] = {};\n        for (let days = 2; days <= 10; days++) {\n          const recent = sorted.slice(0, days);\n          if (recent.length > 0) {\n            const avg = {\n              sleep: (recent.reduce((s, e) => s + e.sleep, 0) / recent.length).toFixed(2),\n              sore: (recent.reduce((s, e) => s + e.sore, 0) / recent.length).toFixed(2),\n              fatigue: (recent.reduce((s, e) => s + e.fatigue, 0) / recent.length).toFixed(2)\n            };\n            playerRolling[name][days] = avg;\n          }\n        }\n      });\n      setPlayerRollingAverages(playerRolling);\n\n      // Rolling team averages per day\n      const sortedByDate = Object.keys(dailyAvg).sort((a, b) => new Date(b) - new Date(a));\n      const teamRolling = [];\n      for (let days = 1; days <= 10; days++) {\n        const recent = sortedByDate.slice(0, days);\n        if (recent.length > 0) {\n          let sleep = 0,\n            sore = 0,\n            fatigue = 0;\n          recent.forEach(date => {\n            sleep += Number(dailyAvg[date].sleep);\n            sore += Number(dailyAvg[date].sore);\n            fatigue += Number(dailyAvg[date].fatigue);\n          });\n          teamRolling.push({\n            days,\n            sleep: (sleep / recent.length).toFixed(2),\n            sore: (sore / recent.length).toFixed(2),\n            fatigue: (fatigue / recent.length).toFixed(2)\n          });\n        }\n      }\n      setTeamRollingAverages(teamRolling);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wellness-report\",\n    dir: \"rtl\",\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u05D3\\u05D5\\u05D7 Wellness\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCC5 \\u05DE\\u05DE\\u05D5\\u05E6\\u05E2 \\u05E7\\u05D1\\u05D5\\u05E6\\u05EA\\u05D9 \\u05DC\\u05E4\\u05D9 \\u05EA\\u05D0\\u05E8\\u05D9\\u05DB\\u05D9\\u05DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"8\",\n      style: {\n        marginBottom: '20px',\n        width: '100%',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05EA\\u05D0\\u05E8\\u05D9\\u05DA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05E9\\u05D9\\u05E0\\u05D4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05E2\\u05D9\\u05D9\\u05E4\\u05D5\\u05EA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05DB\\u05D0\\u05D1\\u05D9 \\u05E9\\u05E8\\u05D9\\u05E8\\u05D9\\u05DD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.entries(dailyAverages).map(([date, avg]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: avg.sleep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: avg.fatigue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: avg.sore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, date, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDC64 \\u05DE\\u05DE\\u05D5\\u05E6\\u05E2 \\u05E9\\u05D7\\u05E7\\u05E0\\u05D9\\u05D5\\u05EA \\u05DC\\u05E4\\u05D9 \\u05D9\\u05DE\\u05D9\\u05DD \\u05D0\\u05D7\\u05E8\\u05D5\\u05E0\\u05D9\\u05DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), Object.entries(playerRollingAverages).map(([name, days]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"6\",\n        style: {\n          width: '100%',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u05DE\\u05E1\\u05E4\\u05E8 \\u05D9\\u05DE\\u05D9\\u05DD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u05E9\\u05D9\\u05E0\\u05D4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u05E2\\u05D9\\u05D9\\u05E4\\u05D5\\u05EA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u05DB\\u05D0\\u05D1\\u05D9 \\u05E9\\u05E8\\u05D9\\u05E8\\u05D9\\u05DD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(days).map(([num, avg]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: num\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: avg.sleep\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: avg.fatigue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: avg.sore\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this)]\n          }, num, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCAA \\u05DE\\u05DE\\u05D5\\u05E6\\u05E2 \\u05E7\\u05D1\\u05D5\\u05E6\\u05EA\\u05D9 \\u05DC\\u05E4\\u05D9 X \\u05D9\\u05DE\\u05D9\\u05DD \\u05D0\\u05D7\\u05E8\\u05D5\\u05E0\\u05D9\\u05DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"6\",\n      style: {\n        width: '100%',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05DE\\u05E1\\u05E4\\u05E8 \\u05D9\\u05DE\\u05D9\\u05DD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05E9\\u05D9\\u05E0\\u05D4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05E2\\u05D9\\u05D9\\u05E4\\u05D5\\u05EA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05DB\\u05D0\\u05D1\\u05D9 \\u05E9\\u05E8\\u05D9\\u05E8\\u05D9\\u05DD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: teamRollingAverages.map((entry, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.days\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.sleep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.fatigue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.sore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(WellnessReport, \"xF2YPNsYTHPJ2puiUGtbBKB0od8=\");\n_c = WellnessReport;\nexport default WellnessReport;\nvar _c;\n$RefreshReg$(_c, \"WellnessReport\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","WellnessReport","_s","data","setData","dailyAverages","setDailyAverages","playerRollingAverages","setPlayerRollingAverages","teamRollingAverages","setTeamRollingAverages","sheetUrl","fetch","then","res","json","parsedData","map","entry","name","date","split","sleep","Number","sore","fatigue","filter","e","isNaN","daily","forEach","count","dailyAvg","Object","keys","d","toFixed","byPlayer","push","playerRolling","entries","sorted","sort","a","b","Date","days","recent","slice","length","avg","reduce","s","sortedByDate","teamRolling","className","dir","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","border","cellPadding","marginBottom","width","textAlign","num","i","_c","$RefreshReg$"],"sources":["/Users/matarsarfati/Downloads/basketball-minutes-fixed/src/WellnessReport.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction WellnessReport() {\n  const [data, setData] = useState([]);\n  const [dailyAverages, setDailyAverages] = useState({});\n  const [playerRollingAverages, setPlayerRollingAverages] = useState({});\n  const [teamRollingAverages, setTeamRollingAverages] = useState([]);\n\n  const sheetUrl = \"https://opensheet.elk.sh/1x1e53gsx3VzEJ5ON5QOvYeJTGI8auMtSxJYYpUUmreY/Wallnes\";\n\n  useEffect(() => {\n    fetch(sheetUrl)\n      .then(res => res.json())\n      .then(json => {\n        const parsedData = json.map(entry => ({\n          name: entry[\"Name\"],\n          date: entry[\"Timestamp\"].split(\" \")[0],\n          sleep: Number(entry[\"What is the quality of your sleep at night?\"]),\n          sore: Number(entry[\"How sore are you?\"]),\n          fatigue: Number(entry[\"How Fatigued are you?\"])\n        })).filter(e => e.name && !isNaN(e.sleep) && !isNaN(e.sore) && !isNaN(e.fatigue));\n\n        setData(parsedData);\n\n        // Daily averages\n        const daily = {};\n        parsedData.forEach(e => {\n          if (!daily[e.date]) daily[e.date] = { sleep: 0, sore: 0, fatigue: 0, count: 0 };\n          daily[e.date].sleep += e.sleep;\n          daily[e.date].sore += e.sore;\n          daily[e.date].fatigue += e.fatigue;\n          daily[e.date].count++;\n        });\n\n        const dailyAvg = {};\n        Object.keys(daily).forEach(date => {\n          const d = daily[date];\n          dailyAvg[date] = {\n            sleep: (d.sleep / d.count).toFixed(2),\n            sore: (d.sore / d.count).toFixed(2),\n            fatigue: (d.fatigue / d.count).toFixed(2)\n          };\n        });\n        setDailyAverages(dailyAvg);\n\n        // Rolling average per player (2–10 days)\n        const byPlayer = {};\n        parsedData.forEach(e => {\n          if (!byPlayer[e.name]) byPlayer[e.name] = [];\n          byPlayer[e.name].push(e);\n        });\n\n        const playerRolling = {};\n        Object.entries(byPlayer).forEach(([name, entries]) => {\n          const sorted = [...entries].sort((a, b) => new Date(b.date) - new Date(a.date));\n          playerRolling[name] = {};\n          for (let days = 2; days <= 10; days++) {\n            const recent = sorted.slice(0, days);\n            if (recent.length > 0) {\n              const avg = {\n                sleep: (recent.reduce((s, e) => s + e.sleep, 0) / recent.length).toFixed(2),\n                sore: (recent.reduce((s, e) => s + e.sore, 0) / recent.length).toFixed(2),\n                fatigue: (recent.reduce((s, e) => s + e.fatigue, 0) / recent.length).toFixed(2)\n              };\n              playerRolling[name][days] = avg;\n            }\n          }\n        });\n        setPlayerRollingAverages(playerRolling);\n\n        // Rolling team averages per day\n        const sortedByDate = Object.keys(dailyAvg).sort((a, b) => new Date(b) - new Date(a));\n        const teamRolling = [];\n        for (let days = 1; days <= 10; days++) {\n          const recent = sortedByDate.slice(0, days);\n          if (recent.length > 0) {\n            let sleep = 0, sore = 0, fatigue = 0;\n            recent.forEach(date => {\n              sleep += Number(dailyAvg[date].sleep);\n              sore += Number(dailyAvg[date].sore);\n              fatigue += Number(dailyAvg[date].fatigue);\n            });\n            teamRolling.push({\n              days,\n              sleep: (sleep / recent.length).toFixed(2),\n              sore: (sore / recent.length).toFixed(2),\n              fatigue: (fatigue / recent.length).toFixed(2)\n            });\n          }\n        }\n        setTeamRollingAverages(teamRolling);\n      });\n  }, []);\n\n  return (\n    <div className=\"wellness-report\" dir=\"rtl\" style={{ padding: '20px' }}>\n      <h1>דוח Wellness</h1>\n\n      <h2>📅 ממוצע קבוצתי לפי תאריכים</h2>\n      <table border=\"1\" cellPadding=\"8\" style={{ marginBottom: '20px', width: '100%', textAlign: 'center' }}>\n        <thead>\n          <tr>\n            <th>תאריך</th>\n            <th>שינה</th>\n            <th>עייפות</th>\n            <th>כאבי שרירים</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.entries(dailyAverages).map(([date, avg]) => (\n            <tr key={date}>\n              <td>{date}</td>\n              <td>{avg.sleep}</td>\n              <td>{avg.fatigue}</td>\n              <td>{avg.sore}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <h2>👤 ממוצע שחקניות לפי ימים אחרונים</h2>\n      {Object.entries(playerRollingAverages).map(([name, days]) => (\n        <div key={name} style={{ marginBottom: '20px' }}>\n          <h3>{name}</h3>\n          <table border=\"1\" cellPadding=\"6\" style={{ width: '100%', textAlign: 'center' }}>\n            <thead>\n              <tr>\n                <th>מספר ימים</th>\n                <th>שינה</th>\n                <th>עייפות</th>\n                <th>כאבי שרירים</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.entries(days).map(([num, avg]) => (\n                <tr key={num}>\n                  <td>{num}</td>\n                  <td>{avg.sleep}</td>\n                  <td>{avg.fatigue}</td>\n                  <td>{avg.sore}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ))}\n\n      <h2>💪 ממוצע קבוצתי לפי X ימים אחרונים</h2>\n      <table border=\"1\" cellPadding=\"6\" style={{ width: '100%', textAlign: 'center' }}>\n        <thead>\n          <tr>\n            <th>מספר ימים</th>\n            <th>שינה</th>\n            <th>עייפות</th>\n            <th>כאבי שרירים</th>\n          </tr>\n        </thead>\n        <tbody>\n          {teamRollingAverages.map((entry, i) => (\n            <tr key={i}>\n              <td>{entry.days}</td>\n              <td>{entry.sleep}</td>\n              <td>{entry.fatigue}</td>\n              <td>{entry.sore}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default WellnessReport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}