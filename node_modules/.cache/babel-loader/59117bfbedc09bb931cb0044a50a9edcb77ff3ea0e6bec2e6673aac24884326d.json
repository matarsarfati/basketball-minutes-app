{"ast":null,"code":"var _jsxFileName = \"/Users/matarsarfati/Downloads/basketball-minutes-fixed/src/WellnessReport.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WellnessReport() {\n  _s();\n  const [data, setData] = useState([]);\n  const [groupRollingAverages, setGroupRollingAverages] = useState([]);\n  const [groupDailyAverages, setGroupDailyAverages] = useState([]);\n  const [selectedStartDate, setSelectedStartDate] = useState('');\n  const [selectedEndDate, setSelectedEndDate] = useState('');\n  const [filteredGroupAverage, setFilteredGroupAverage] = useState(null);\n  const [playerExpanded, setPlayerExpanded] = useState({});\n  const sheetUrl = \"https://opensheet.elk.sh/1x1e53gsx3VzEJ5ON5QOvYeJTGI8auMtSxJYYpUUmreY/Wallnes\";\n  useEffect(() => {\n    fetch(sheetUrl).then(res => res.json()).then(json => {\n      const parsed = json.map(row => ({\n        name: row[\"Name\"],\n        sleep: Number(row[\"What is the quality of your sleep at night?\"]),\n        sore: Number(row[\"How sore are you?\"]),\n        fatigue: Number(row[\"How Fatigued are you?\"]),\n        date: new Date(row.Timestamp.split(\" \")[0].split(\"/\").reverse().join(\"-\"))\n      })).filter(row => row.name && !isNaN(row.date));\n      setData(parsed);\n      processGroupAverages(parsed);\n    });\n  }, []);\n  const processGroupAverages = parsed => {\n    const groupedByDate = {};\n    parsed.forEach(entry => {\n      const key = entry.date.toISOString().split('T')[0];\n      if (!groupedByDate[key]) groupedByDate[key] = [];\n      groupedByDate[key].push(entry);\n    });\n    const sortedDates = Object.keys(groupedByDate).sort();\n    const dailyAvgs = sortedDates.map(date => {\n      const entries = groupedByDate[date];\n      const count = entries.length;\n      const sleep = entries.reduce((sum, e) => sum + e.sleep, 0) / count;\n      const sore = entries.reduce((sum, e) => sum + e.sore, 0) / count;\n      const fatigue = entries.reduce((sum, e) => sum + e.fatigue, 0) / count;\n      return {\n        date,\n        sleep,\n        sore,\n        fatigue\n      };\n    });\n    setGroupDailyAverages(dailyAvgs);\n    const rolling = sortedDates.slice(-8).map((_, idx, arr) => {\n      const slice = arr.slice(Math.max(0, idx - 7), idx + 1);\n      const vals = slice.map(d => dailyAvgs.find(av => av.date === d)).filter(Boolean);\n      const count = vals.length;\n      const avg = key => (vals.reduce((sum, v) => sum + v[key], 0) / count).toFixed(2);\n      return {\n        range: `${slice[0]} → ${slice[slice.length - 1]}`,\n        sleep: avg('sleep'),\n        sore: avg('sore'),\n        fatigue: avg('fatigue')\n      };\n    });\n    setGroupRollingAverages(rolling);\n  };\n  const handleGroupAverageByRange = () => {\n    if (!selectedStartDate || !selectedEndDate) return;\n    const from = new Date(selectedStartDate);\n    const to = new Date(selectedEndDate);\n    const filtered = data.filter(e => e.date >= from && e.date <= to);\n    if (filtered.length === 0) {\n      setFilteredGroupAverage(\"אין נתונים בטווח התאריכים הנבחר\");\n      return;\n    }\n    const count = filtered.length;\n    const avg = key => (filtered.reduce((sum, e) => sum + e[key], 0) / count).toFixed(2);\n    setFilteredGroupAverage({\n      sleep: avg('sleep'),\n      sore: avg('sore'),\n      fatigue: avg('fatigue')\n    });\n  };\n  const togglePlayer = name => {\n    setPlayerExpanded(prev => ({\n      ...prev,\n      [name]: !prev[name]\n    }));\n  };\n  const getPlayerStats = name => {\n    const entries = data.filter(e => e.name === name);\n    const groupedByDate = {};\n    entries.forEach(e => {\n      const key = e.date.toISOString().split('T')[0];\n      if (!groupedByDate[key]) groupedByDate[key] = [];\n      groupedByDate[key].push(e);\n    });\n    const dates = Object.keys(groupedByDate).sort().slice(-8);\n    const daily = dates.map(date => {\n      const items = groupedByDate[date];\n      const count = items.length;\n      return {\n        date,\n        sleep: (items.reduce((sum, e) => sum + e.sleep, 0) / count).toFixed(2),\n        sore: (items.reduce((sum, e) => sum + e.sore, 0) / count).toFixed(2),\n        fatigue: (items.reduce((sum, e) => sum + e.fatigue, 0) / count).toFixed(2)\n      };\n    });\n    const rolling = (() => {\n      const recent = entries.filter(e => e.date >= new Date(Date.now() - 8 * 24 * 60 * 60 * 1000));\n      const count = recent.length;\n      if (count === 0) return null;\n      const avg = key => (recent.reduce((sum, e) => sum + e[key], 0) / count).toFixed(2);\n      return {\n        sleep: avg('sleep'),\n        sore: avg('sore'),\n        fatigue: avg('fatigue')\n      };\n    })();\n    return {\n      daily,\n      rolling\n    };\n  };\n  const playerNames = [...new Set(data.map(e => e.name))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wellness-report\",\n    dir: \"rtl\",\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u05D3\\u05D5\\u05D7 Wellness\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u05DE\\u05DE\\u05D5\\u05E6\\u05E2 \\u05E7\\u05D1\\u05D5\\u05E6\\u05EA\\u05D9 - \\u05D7\\u05DE\\u05D9\\u05E9\\u05D4 \\u05D9\\u05DE\\u05D9\\u05DD \\u05D0\\u05D7\\u05E8\\u05D5\\u05E0\\u05D9\\u05DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"8\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05EA\\u05D0\\u05E8\\u05D9\\u05DA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05E9\\u05D9\\u05E0\\u05D4 \\uD83D\\uDCA4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05E2\\u05D9\\u05D9\\u05E4\\u05D5\\u05EA \\uD83D\\uDE34\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05DB\\u05D0\\u05D1\\u05D9 \\u05E9\\u05E8\\u05D9\\u05E8\\u05D9\\u05DD \\uD83D\\uDCAA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: groupDailyAverages.slice(-5).map((d, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.sleep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.fatigue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 60\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.sore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 80\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u05DE\\u05DE\\u05D5\\u05E6\\u05E2 \\u05E7\\u05D1\\u05D5\\u05E6\\u05EA\\u05D9 \\u05DC\\u05E4\\u05D9 \\u05D8\\u05D5\\u05D5\\u05D7 \\u05EA\\u05D0\\u05E8\\u05D9\\u05DB\\u05D9\\u05DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: selectedStartDate,\n      onChange: e => setSelectedStartDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: selectedEndDate,\n      onChange: e => setSelectedEndDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGroupAverageByRange,\n      children: \"\\u05D7\\u05E9\\u05D1 \\u05DE\\u05DE\\u05D5\\u05E6\\u05E2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), filteredGroupAverage && (typeof filteredGroupAverage === 'string' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: filteredGroupAverage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 52\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"8\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05E9\\u05D9\\u05E0\\u05D4 \\uD83D\\uDCA4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05E2\\u05D9\\u05D9\\u05E4\\u05D5\\u05EA \\uD83D\\uDE34\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 40\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05DB\\u05D0\\u05D1\\u05D9 \\u05E9\\u05E8\\u05D9\\u05E8\\u05D9\\u05DD \\uD83D\\uDCAA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 58\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: filteredGroupAverage.sleep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: filteredGroupAverage.fatigue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 56\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: filteredGroupAverage.sore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 95\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u05DE\\u05DE\\u05D5\\u05E6\\u05E2\\u05D9\\u05DD \\u05DE\\u05EA\\u05D2\\u05DC\\u05D2\\u05DC\\u05D9\\u05DD (8 \\u05D9\\u05DE\\u05D9\\u05DD \\u05D0\\u05D7\\u05E8\\u05D5\\u05E0\\u05D9\\u05DD)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"8\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05D8\\u05D5\\u05D5\\u05D7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05E9\\u05D9\\u05E0\\u05D4 \\uD83D\\uDCA4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05E2\\u05D9\\u05D9\\u05E4\\u05D5\\u05EA \\uD83D\\uDE34\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05DB\\u05D0\\u05D1\\u05D9 \\u05E9\\u05E8\\u05D9\\u05E8\\u05D9\\u05DD \\uD83D\\uDCAA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 67\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: groupRollingAverages.map((g, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: g.range\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: g.sleep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: g.fatigue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 61\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: g.sore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 81\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u05DE\\u05DE\\u05D5\\u05E6\\u05E2\\u05D9\\u05DD \\u05DC\\u05E4\\u05D9 \\u05E9\\u05D7\\u05E7\\u05E0\\u05D9\\u05EA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), playerNames.map(name => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => togglePlayer(name),\n        children: [playerExpanded[name] ? 'הסתר' : 'הצג', \" \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), playerExpanded[name] && (() => {\n        const stats = getPlayerStats(name);\n        return stats ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"8 \\u05D9\\u05DE\\u05D9\\u05DD \\u05D0\\u05D7\\u05E8\\u05D5\\u05E0\\u05D9\\u05DD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            border: \"1\",\n            cellPadding: \"8\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u05EA\\u05D0\\u05E8\\u05D9\\u05DA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 30\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u05E9\\u05D9\\u05E0\\u05D4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 44\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u05E2\\u05D9\\u05D9\\u05E4\\u05D5\\u05EA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u05DB\\u05D0\\u05D1\\u05D9 \\u05E9\\u05E8\\u05D9\\u05E8\\u05D9\\u05DD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 72\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: stats.daily.map((d, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: d.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 35\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: d.sleep\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 52\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: d.fatigue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 70\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: d.sore\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 90\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this), stats.rolling && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\u05DE\\u05DE\\u05D5\\u05E6\\u05E2 \\u05DE\\u05EA\\u05D2\\u05DC\\u05D2\\u05DC (8 \\u05D9\\u05DE\\u05D9\\u05DD \\u05D0\\u05D7\\u05E8\\u05D5\\u05E0\\u05D9\\u05DD)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              border: \"1\",\n              cellPadding: \"8\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u05E9\\u05D9\\u05E0\\u05D4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 34\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u05E2\\u05D9\\u05D9\\u05E4\\u05D5\\u05EA\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 47\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u05DB\\u05D0\\u05D1\\u05D9 \\u05E9\\u05E8\\u05D9\\u05E8\\u05D9\\u05DD\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 62\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 30\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: stats.rolling.sleep\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: stats.rolling.fatigue\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 59\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: stats.rolling.sore\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 91\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u05D0\\u05D9\\u05DF \\u05E0\\u05EA\\u05D5\\u05E0\\u05D9\\u05DD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }, this);\n      })()]\n    }, name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(WellnessReport, \"r4u6113OkFRN2ybmxg5CNeD6d1o=\");\n_c = WellnessReport;\nexport default WellnessReport;\nvar _c;\n$RefreshReg$(_c, \"WellnessReport\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","WellnessReport","_s","data","setData","groupRollingAverages","setGroupRollingAverages","groupDailyAverages","setGroupDailyAverages","selectedStartDate","setSelectedStartDate","selectedEndDate","setSelectedEndDate","filteredGroupAverage","setFilteredGroupAverage","playerExpanded","setPlayerExpanded","sheetUrl","fetch","then","res","json","parsed","map","row","name","sleep","Number","sore","fatigue","date","Date","Timestamp","split","reverse","join","filter","isNaN","processGroupAverages","groupedByDate","forEach","entry","key","toISOString","push","sortedDates","Object","keys","sort","dailyAvgs","entries","count","length","reduce","sum","e","rolling","slice","_","idx","arr","Math","max","vals","d","find","av","Boolean","avg","v","toFixed","range","handleGroupAverageByRange","from","to","filtered","togglePlayer","prev","getPlayerStats","dates","daily","items","recent","now","playerNames","Set","className","dir","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","border","cellPadding","i","type","value","onChange","target","onClick","g","stats","_c","$RefreshReg$"],"sources":["/Users/matarsarfati/Downloads/basketball-minutes-fixed/src/WellnessReport.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction WellnessReport() {\n  const [data, setData] = useState([]);\n  const [groupRollingAverages, setGroupRollingAverages] = useState([]);\n  const [groupDailyAverages, setGroupDailyAverages] = useState([]);\n  const [selectedStartDate, setSelectedStartDate] = useState('');\n  const [selectedEndDate, setSelectedEndDate] = useState('');\n  const [filteredGroupAverage, setFilteredGroupAverage] = useState(null);\n  const [playerExpanded, setPlayerExpanded] = useState({});\n  const sheetUrl = \"https://opensheet.elk.sh/1x1e53gsx3VzEJ5ON5QOvYeJTGI8auMtSxJYYpUUmreY/Wallnes\";\n\n  useEffect(() => {\n    fetch(sheetUrl)\n      .then(res => res.json())\n      .then(json => {\n        const parsed = json.map(row => ({\n          name: row[\"Name\"],\n          sleep: Number(row[\"What is the quality of your sleep at night?\"]),\n          sore: Number(row[\"How sore are you?\"]),\n          fatigue: Number(row[\"How Fatigued are you?\"]),\n          date: new Date(row.Timestamp.split(\" \")[0].split(\"/\").reverse().join(\"-\"))\n        })).filter(row => row.name && !isNaN(row.date));\n\n        setData(parsed);\n        processGroupAverages(parsed);\n      });\n  }, []);\n\n  const processGroupAverages = (parsed) => {\n    const groupedByDate = {};\n    parsed.forEach(entry => {\n      const key = entry.date.toISOString().split('T')[0];\n      if (!groupedByDate[key]) groupedByDate[key] = [];\n      groupedByDate[key].push(entry);\n    });\n\n    const sortedDates = Object.keys(groupedByDate).sort();\n\n    const dailyAvgs = sortedDates.map(date => {\n      const entries = groupedByDate[date];\n      const count = entries.length;\n      const sleep = entries.reduce((sum, e) => sum + e.sleep, 0) / count;\n      const sore = entries.reduce((sum, e) => sum + e.sore, 0) / count;\n      const fatigue = entries.reduce((sum, e) => sum + e.fatigue, 0) / count;\n      return { date, sleep, sore, fatigue };\n    });\n    setGroupDailyAverages(dailyAvgs);\n\n    const rolling = sortedDates.slice(-8).map((_, idx, arr) => {\n      const slice = arr.slice(Math.max(0, idx - 7), idx + 1);\n      const vals = slice.map(d => dailyAvgs.find(av => av.date === d)).filter(Boolean);\n      const count = vals.length;\n      const avg = (key) => (vals.reduce((sum, v) => sum + v[key], 0) / count).toFixed(2);\n      return {\n        range: `${slice[0]} → ${slice[slice.length - 1]}`,\n        sleep: avg('sleep'),\n        sore: avg('sore'),\n        fatigue: avg('fatigue')\n      };\n    });\n    setGroupRollingAverages(rolling);\n  };\n\n  const handleGroupAverageByRange = () => {\n    if (!selectedStartDate || !selectedEndDate) return;\n    const from = new Date(selectedStartDate);\n    const to = new Date(selectedEndDate);\n    const filtered = data.filter(e => e.date >= from && e.date <= to);\n    if (filtered.length === 0) {\n      setFilteredGroupAverage(\"אין נתונים בטווח התאריכים הנבחר\");\n      return;\n    }\n    const count = filtered.length;\n    const avg = key => (filtered.reduce((sum, e) => sum + e[key], 0) / count).toFixed(2);\n    setFilteredGroupAverage({\n      sleep: avg('sleep'),\n      sore: avg('sore'),\n      fatigue: avg('fatigue')\n    });\n  };\n\n  const togglePlayer = (name) => {\n    setPlayerExpanded(prev => ({ ...prev, [name]: !prev[name] }));\n  };\n\n  const getPlayerStats = (name) => {\n    const entries = data.filter(e => e.name === name);\n    const groupedByDate = {};\n    entries.forEach(e => {\n      const key = e.date.toISOString().split('T')[0];\n      if (!groupedByDate[key]) groupedByDate[key] = [];\n      groupedByDate[key].push(e);\n    });\n    const dates = Object.keys(groupedByDate).sort().slice(-8);\n    const daily = dates.map(date => {\n      const items = groupedByDate[date];\n      const count = items.length;\n      return {\n        date,\n        sleep: (items.reduce((sum, e) => sum + e.sleep, 0) / count).toFixed(2),\n        sore: (items.reduce((sum, e) => sum + e.sore, 0) / count).toFixed(2),\n        fatigue: (items.reduce((sum, e) => sum + e.fatigue, 0) / count).toFixed(2)\n      };\n    });\n    const rolling = (() => {\n      const recent = entries.filter(e => e.date >= new Date(Date.now() - 8 * 24 * 60 * 60 * 1000));\n      const count = recent.length;\n      if (count === 0) return null;\n      const avg = key => (recent.reduce((sum, e) => sum + e[key], 0) / count).toFixed(2);\n      return {\n        sleep: avg('sleep'),\n        sore: avg('sore'),\n        fatigue: avg('fatigue')\n      };\n    })();\n    return { daily, rolling };\n  };\n\n  const playerNames = [...new Set(data.map(e => e.name))];\n\n  return (\n    <div className=\"wellness-report\" dir=\"rtl\" style={{ padding: '20px' }}>\n      <h1>דוח Wellness</h1>\n\n      <h2>ממוצע קבוצתי - חמישה ימים אחרונים</h2>\n      <table border=\"1\" cellPadding=\"8\">\n        <thead>\n          <tr>\n            <th>תאריך</th><th>שינה 💤</th><th>עייפות 😴</th><th>כאבי שרירים 💪</th>\n          </tr>\n        </thead>\n        <tbody>\n          {groupDailyAverages.slice(-5).map((d, i) => (\n            <tr key={i}><td>{d.date}</td><td>{d.sleep}</td><td>{d.fatigue}</td><td>{d.sore}</td></tr>\n          ))}\n        </tbody>\n      </table>\n\n      <h2>ממוצע קבוצתי לפי טווח תאריכים</h2>\n      <input type=\"date\" value={selectedStartDate} onChange={(e) => setSelectedStartDate(e.target.value)} />\n      <input type=\"date\" value={selectedEndDate} onChange={(e) => setSelectedEndDate(e.target.value)} />\n      <button onClick={handleGroupAverageByRange}>חשב ממוצע</button>\n      {filteredGroupAverage && (\n        typeof filteredGroupAverage === 'string' ? <p>{filteredGroupAverage}</p> : (\n          <table border=\"1\" cellPadding=\"8\">\n            <thead><tr><th>שינה 💤</th><th>עייפות 😴</th><th>כאבי שרירים 💪</th></tr></thead>\n            <tbody>\n              <tr><td>{filteredGroupAverage.sleep}</td><td>{filteredGroupAverage.fatigue}</td><td>{filteredGroupAverage.sore}</td></tr>\n            </tbody>\n          </table>\n        )\n      )}\n\n      <h2>ממוצעים מתגלגלים (8 ימים אחרונים)</h2>\n      <table border=\"1\" cellPadding=\"8\">\n        <thead><tr><th>טווח</th><th>שינה 💤</th><th>עייפות 😴</th><th>כאבי שרירים 💪</th></tr></thead>\n        <tbody>\n          {groupRollingAverages.map((g, i) => (\n            <tr key={i}><td>{g.range}</td><td>{g.sleep}</td><td>{g.fatigue}</td><td>{g.sore}</td></tr>\n          ))}\n        </tbody>\n      </table>\n\n      <h2>ממוצעים לפי שחקנית</h2>\n      {playerNames.map(name => (\n        <div key={name}>\n          <button onClick={() => togglePlayer(name)}>{playerExpanded[name] ? 'הסתר' : 'הצג'} {name}</button>\n          {playerExpanded[name] && (() => {\n            const stats = getPlayerStats(name);\n            return stats ? (\n              <>\n                <h4>8 ימים אחרונים</h4>\n                <table border=\"1\" cellPadding=\"8\">\n                  <thead><tr><th>תאריך</th><th>שינה</th><th>עייפות</th><th>כאבי שרירים</th></tr></thead>\n                  <tbody>\n                    {stats.daily.map((d, i) => (\n                      <tr key={i}><td>{d.date}</td><td>{d.sleep}</td><td>{d.fatigue}</td><td>{d.sore}</td></tr>\n                    ))}\n                  </tbody>\n                </table>\n                {stats.rolling && (\n                  <>\n                    <h4>ממוצע מתגלגל (8 ימים אחרונים)</h4>\n                    <table border=\"1\" cellPadding=\"8\">\n                      <thead><tr><th>שינה</th><th>עייפות</th><th>כאבי שרירים</th></tr></thead>\n                      <tbody>\n                        <tr><td>{stats.rolling.sleep}</td><td>{stats.rolling.fatigue}</td><td>{stats.rolling.sore}</td></tr>\n                      </tbody>\n                    </table>\n                  </>\n                )}\n              </>\n            ) : <p>אין נתונים</p>;\n          })()}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default WellnessReport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}