{"ast":null,"code":"var _jsxFileName = \"/Users/matarsarfati/Downloads/basketball-minutes-fixed/src/GymCourtReport.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/he';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ndayjs.locale('he');\nconst SHEET_BASE = \"https://opensheet.elk.sh/1x1e53gsx3VzEJ5ON5QOvYeJTGI8auMtSxJYYpUUmreY\";\nconst formatDate = dateStr => {\n  const parsed = dayjs(dateStr, 'DD/MM/YYYY HH:mm:ss');\n  return parsed.isValid() ? parsed.format('YYYY-MM-DD') : null;\n};\nfunction processRPEData(data, fieldName) {\n  const daily = {};\n  const playerDaily = {};\n  data.forEach(entry => {\n    const rawDate = entry.Timestamp;\n    const name = entry.Name;\n    const rpe = Number(entry[fieldName]);\n    const date = formatDate(rawDate);\n    if (!date || !name || isNaN(rpe)) return;\n    if (!daily[date]) daily[date] = [];\n    daily[date].push(rpe);\n    if (!playerDaily[name]) playerDaily[name] = {};\n    if (!playerDaily[name][date]) playerDaily[name][date] = [];\n    playerDaily[name][date].push(rpe);\n  });\n  const dailyAvg = Object.entries(daily).map(([date, values]) => ({\n    date,\n    avg: (values.reduce((a, b) => a + b, 0) / values.length).toFixed(1)\n  })).sort((a, b) => new Date(a.date) - new Date(b.date));\n  return {\n    dailyAvg,\n    playerDaily\n  };\n}\nfunction PlayerRPE({\n  playerData\n}) {\n  _s();\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\n  const [from, setFrom] = useState('');\n  const [to, setTo] = useState('');\n  const [customAvg, setCustomAvg] = useState(null);\n  const getPlayerRollingAvg = (data, days) => {\n    const dates = Object.keys(data).sort((a, b) => new Date(a) - new Date(b));\n    const lastDates = dates.slice(-days);\n    const values = lastDates.map(d => {\n      const arr = data[d];\n      return arr.length ? arr.reduce((a, b) => a + b, 0) / arr.length : null;\n    }).filter(Boolean);\n    return values.length ? (values.reduce((a, b) => a + b, 0) / values.length).toFixed(1) : 'אין נתונים';\n  };\n  const getCustomAvg = (data, from, to) => {\n    const filtered = Object.entries(data).filter(([d]) => d >= from && d <= to);\n    const values = filtered.map(([, arr]) => arr.reduce((a, b) => a + b, 0) / arr.length);\n    return values.length ? (values.reduce((a, b) => a + b, 0) / values.length).toFixed(1) : 'אין נתונים';\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Object.entries(playerData).map(([name, data], idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '16px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedPlayer(selectedPlayer === name ? null : name),\n        children: [selectedPlayer === name ? '🔽' : '▶️', \" \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), selectedPlayer === name && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          cellPadding: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u05EA\\u05D0\\u05E8\\u05D9\\u05DA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"RPE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 42\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(data).sort((a, b) => new Date(a[0]) - new Date(b[0])).slice(-8).map(([date, values], i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: (values.reduce((a, b) => a + b, 0) / values.length).toFixed(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 23\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u05DE\\u05DE\\u05D5\\u05E6\\u05E2\\u05D9\\u05DD \\u05DE\\u05EA\\u05D2\\u05DC\\u05D2\\u05DC\\u05D9\\u05DD: 3 \\u05D9\\u05DE\\u05D9\\u05DD: \", getPlayerRollingAvg(data, 3), \" | 5 \\u05D9\\u05DE\\u05D9\\u05DD: \", getPlayerRollingAvg(data, 5), \" | 8 \\u05D9\\u05DE\\u05D9\\u05DD: \", getPlayerRollingAvg(data, 8)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u05DE\\u05DE\\u05D5\\u05E6\\u05E2 \\u05DC\\u05E4\\u05D9 \\u05D8\\u05D5\\u05D5\\u05D7 \\u05EA\\u05D0\\u05E8\\u05D9\\u05DB\\u05D9\\u05DD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: from,\n            onChange: e => setFrom(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: to,\n            onChange: e => setTo(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCustomAvg(getCustomAvg(data, from, to)),\n            children: \"\\u05D7\\u05E9\\u05D1 \\u05DE\\u05DE\\u05D5\\u05E6\\u05E2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), customAvg && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u05DE\\u05DE\\u05D5\\u05E6\\u05E2 \\u05D1\\u05D8\\u05D5\\u05D5\\u05D7: \", customAvg]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_s(PlayerRPE, \"ZdHcNsEYh2ArJIiEzhUIfqLKEJc=\");\n_c = PlayerRPE;\nfunction RPEBlock({\n  title,\n  url,\n  field\n}) {\n  _s2();\n  const [data, setData] = useState([]);\n  const [processed, setProcessed] = useState(null);\n  const [from, setFrom] = useState('');\n  const [to, setTo] = useState('');\n  const [customAvg, setCustomAvg] = useState(null);\n  useEffect(() => {\n    fetch(url).then(res => res.json()).then(json => {\n      setData(json);\n      setProcessed(processRPEData(json, field));\n    });\n  }, [url, field]);\n  const getRollingAvg = days => {\n    if (!processed) return 0;\n    const recent = processed.dailyAvg.slice(-days);\n    const values = recent.map(d => Number(d.avg));\n    return values.length ? (values.reduce((a, b) => a + b, 0) / values.length).toFixed(1) : 'אין נתונים';\n  };\n  const getCustomAvg = (from, to) => {\n    if (!processed) return 0;\n    const filtered = processed.dailyAvg.filter(d => d.date >= from && d.date <= to);\n    const values = filtered.map(d => Number(d.avg));\n    return values.length ? (values.reduce((a, b) => a + b, 0) / values.length).toFixed(1) : 'אין נתונים';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '40px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u05DE\\u05DE\\u05D5\\u05E6\\u05E2 \\u05DC\\u05E4\\u05D9 \\u05D9\\u05DE\\u05D9\\u05DD (8 \\u05D9\\u05DE\\u05D9\\u05DD \\u05D0\\u05D7\\u05E8\\u05D5\\u05E0\\u05D9\\u05DD)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"6\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05EA\\u05D0\\u05E8\\u05D9\\u05DA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05DE\\u05DE\\u05D5\\u05E6\\u05E2 RPE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: processed && processed.dailyAvg.slice(-8).map((entry, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.avg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 46\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u05DE\\u05DE\\u05D5\\u05E6\\u05E2 \\u05DE\\u05EA\\u05D2\\u05DC\\u05D2\\u05DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"3 \\u05D9\\u05DE\\u05D9\\u05DD: \", getRollingAvg(3), \" | 5 \\u05D9\\u05DE\\u05D9\\u05DD: \", getRollingAvg(5), \" | 8 \\u05D9\\u05DE\\u05D9\\u05DD: \", getRollingAvg(8)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u05DE\\u05DE\\u05D5\\u05E6\\u05E2 \\u05DC\\u05E4\\u05D9 \\u05D8\\u05D5\\u05D5\\u05D7 \\u05EA\\u05D0\\u05E8\\u05D9\\u05DB\\u05D9\\u05DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: from,\n      onChange: e => setFrom(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: to,\n      onChange: e => setTo(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCustomAvg(getCustomAvg(from, to)),\n      children: \"\\u05D7\\u05E9\\u05D1 \\u05DE\\u05DE\\u05D5\\u05E6\\u05E2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), customAvg && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u05DE\\u05DE\\u05D5\\u05E6\\u05E2 \\u05D1\\u05D8\\u05D5\\u05D5\\u05D7: \", customAvg]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u05DE\\u05DE\\u05D5\\u05E6\\u05E2\\u05D9\\u05DD \\u05DC\\u05E4\\u05D9 \\u05E9\\u05D7\\u05E7\\u05E0\\u05D9\\u05EA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), processed && /*#__PURE__*/_jsxDEV(PlayerRPE, {\n      playerData: processed.playerDaily\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s2(RPEBlock, \"b+JI4paUtmpVkOVBGEjhm1hhnTE=\");\n_c2 = RPEBlock;\nexport default function GymCourtReport() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"report\",\n    dir: \"rtl\",\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u05D3\\u05D5\\\"\\u05D7 RPE - \\u05D7\\u05D3\\u05E8 \\u05DB\\u05D5\\u05E9\\u05E8 \\u05D5\\u05DE\\u05D2\\u05E8\\u05E9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RPEBlock, {\n      title: \"\\uD83C\\uDFCB\\uFE0F \\u05D7\\u05D3\\u05E8 \\u05DB\\u05D5\\u05E9\\u05E8 (Gym)\",\n      url: `${SHEET_BASE}/Gym`,\n      field: \"RPE \\u05D1\\u05D7\\u05D3\\u05E8 \\u05DB\\u05D5\\u05E9\\u05E8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RPEBlock, {\n      title: \"\\uD83C\\uDFC0 \\u05DE\\u05D2\\u05E8\\u05E9 (Court)\",\n      url: `${SHEET_BASE}/Court`,\n      field: \"RPE \\u05D1\\u05DE\\u05D2\\u05E8\\u05E9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_c3 = GymCourtReport;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"PlayerRPE\");\n$RefreshReg$(_c2, \"RPEBlock\");\n$RefreshReg$(_c3, \"GymCourtReport\");","map":{"version":3,"names":["React","useState","useEffect","dayjs","jsxDEV","_jsxDEV","Fragment","_Fragment","locale","SHEET_BASE","formatDate","dateStr","parsed","isValid","format","processRPEData","data","fieldName","daily","playerDaily","forEach","entry","rawDate","Timestamp","name","Name","rpe","Number","date","isNaN","push","dailyAvg","Object","entries","map","values","avg","reduce","a","b","length","toFixed","sort","Date","PlayerRPE","playerData","_s","selectedPlayer","setSelectedPlayer","from","setFrom","to","setTo","customAvg","setCustomAvg","getPlayerRollingAvg","days","dates","keys","lastDates","slice","d","arr","filter","Boolean","getCustomAvg","filtered","children","idx","style","margin","onClick","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","border","cellPadding","i","type","value","onChange","e","target","_c","RPEBlock","title","url","field","_s2","setData","processed","setProcessed","fetch","then","res","json","getRollingAvg","recent","marginBottom","_c2","GymCourtReport","className","dir","padding","_c3","$RefreshReg$"],"sources":["/Users/matarsarfati/Downloads/basketball-minutes-fixed/src/GymCourtReport.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/he';\n\ndayjs.locale('he');\n\nconst SHEET_BASE = \"https://opensheet.elk.sh/1x1e53gsx3VzEJ5ON5QOvYeJTGI8auMtSxJYYpUUmreY\";\n\nconst formatDate = (dateStr) => {\n  const parsed = dayjs(dateStr, 'DD/MM/YYYY HH:mm:ss');\n  return parsed.isValid() ? parsed.format('YYYY-MM-DD') : null;\n};\n\nfunction processRPEData(data, fieldName) {\n  const daily = {};\n  const playerDaily = {};\n\n  data.forEach(entry => {\n    const rawDate = entry.Timestamp;\n    const name = entry.Name;\n    const rpe = Number(entry[fieldName]);\n\n    const date = formatDate(rawDate);\n    if (!date || !name || isNaN(rpe)) return;\n\n    if (!daily[date]) daily[date] = [];\n    daily[date].push(rpe);\n\n    if (!playerDaily[name]) playerDaily[name] = {};\n    if (!playerDaily[name][date]) playerDaily[name][date] = [];\n    playerDaily[name][date].push(rpe);\n  });\n\n  const dailyAvg = Object.entries(daily).map(([date, values]) => ({\n    date,\n    avg: (values.reduce((a, b) => a + b, 0) / values.length).toFixed(1)\n  })).sort((a, b) => new Date(a.date) - new Date(b.date));\n\n  return { dailyAvg, playerDaily };\n}\n\nfunction PlayerRPE({ playerData }) {\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\n  const [from, setFrom] = useState('');\n  const [to, setTo] = useState('');\n  const [customAvg, setCustomAvg] = useState(null);\n\n  const getPlayerRollingAvg = (data, days) => {\n    const dates = Object.keys(data).sort((a, b) => new Date(a) - new Date(b));\n    const lastDates = dates.slice(-days);\n    const values = lastDates.map(d => {\n      const arr = data[d];\n      return arr.length ? arr.reduce((a, b) => a + b, 0) / arr.length : null;\n    }).filter(Boolean);\n    return values.length ? (values.reduce((a, b) => a + b, 0) / values.length).toFixed(1) : 'אין נתונים';\n  };\n\n  const getCustomAvg = (data, from, to) => {\n    const filtered = Object.entries(data).filter(([d]) => d >= from && d <= to);\n    const values = filtered.map(([, arr]) => arr.reduce((a, b) => a + b, 0) / arr.length);\n    return values.length ? (values.reduce((a, b) => a + b, 0) / values.length).toFixed(1) : 'אין נתונים';\n  };\n\n  return (\n    <>\n      {Object.entries(playerData).map(([name, data], idx) => (\n        <div key={idx} style={{ margin: '16px 0' }}>\n          <button onClick={() => setSelectedPlayer(selectedPlayer === name ? null : name)}>\n            {selectedPlayer === name ? '🔽' : '▶️'} {name}\n          </button>\n          {selectedPlayer === name && (\n            <div style={{ marginTop: 10 }}>\n              <table border=\"1\" cellPadding=\"6\">\n                <thead><tr><th>תאריך</th><th>RPE</th></tr></thead>\n                <tbody>\n                  {Object.entries(data).sort((a, b) => new Date(a[0]) - new Date(b[0])).slice(-8).map(([date, values], i) => (\n                    <tr key={i}>\n                      <td>{date}</td>\n                      <td>{(values.reduce((a, b) => a + b, 0) / values.length).toFixed(1)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <p>ממוצעים מתגלגלים: 3 ימים: {getPlayerRollingAvg(data, 3)} | 5 ימים: {getPlayerRollingAvg(data, 5)} | 8 ימים: {getPlayerRollingAvg(data, 8)}</p>\n\n              <div>\n                <p>ממוצע לפי טווח תאריכים</p>\n                <input type=\"date\" value={from} onChange={e => setFrom(e.target.value)} />\n                <input type=\"date\" value={to} onChange={e => setTo(e.target.value)} />\n                <button onClick={() => setCustomAvg(getCustomAvg(data, from, to))}>חשב ממוצע</button>\n                {customAvg && <p>ממוצע בטווח: {customAvg}</p>}\n              </div>\n            </div>\n          )}\n        </div>\n      ))}\n    </>\n  );\n}\n\nfunction RPEBlock({ title, url, field }) {\n  const [data, setData] = useState([]);\n  const [processed, setProcessed] = useState(null);\n  const [from, setFrom] = useState('');\n  const [to, setTo] = useState('');\n  const [customAvg, setCustomAvg] = useState(null);\n\n  useEffect(() => {\n    fetch(url)\n      .then(res => res.json())\n      .then(json => {\n        setData(json);\n        setProcessed(processRPEData(json, field));\n      });\n  }, [url, field]);\n\n  const getRollingAvg = (days) => {\n    if (!processed) return 0;\n    const recent = processed.dailyAvg.slice(-days);\n    const values = recent.map(d => Number(d.avg));\n    return values.length ? (values.reduce((a, b) => a + b, 0) / values.length).toFixed(1) : 'אין נתונים';\n  };\n\n  const getCustomAvg = (from, to) => {\n    if (!processed) return 0;\n    const filtered = processed.dailyAvg.filter(d => d.date >= from && d.date <= to);\n    const values = filtered.map(d => Number(d.avg));\n    return values.length ? (values.reduce((a, b) => a + b, 0) / values.length).toFixed(1) : 'אין נתונים';\n  };\n\n  return (\n    <div style={{ marginBottom: '40px' }}>\n      <h2>{title}</h2>\n\n      <h3>ממוצע לפי ימים (8 ימים אחרונים)</h3>\n      <table border=\"1\" cellPadding=\"6\">\n        <thead><tr><th>תאריך</th><th>ממוצע RPE</th></tr></thead>\n        <tbody>\n          {processed && processed.dailyAvg.slice(-8).map((entry, i) => (\n            <tr key={i}><td>{entry.date}</td><td>{entry.avg}</td></tr>\n          ))}\n        </tbody>\n      </table>\n\n      <h3>ממוצע מתגלגל</h3>\n      <p>3 ימים: {getRollingAvg(3)} | 5 ימים: {getRollingAvg(5)} | 8 ימים: {getRollingAvg(8)}</p>\n\n      <h3>ממוצע לפי טווח תאריכים</h3>\n      <input type=\"date\" value={from} onChange={e => setFrom(e.target.value)} />\n      <input type=\"date\" value={to} onChange={e => setTo(e.target.value)} />\n      <button onClick={() => setCustomAvg(getCustomAvg(from, to))}>חשב ממוצע</button>\n      {customAvg && <p>ממוצע בטווח: {customAvg}</p>}\n\n      <h3>ממוצעים לפי שחקנית</h3>\n      {processed && <PlayerRPE playerData={processed.playerDaily} />}\n    </div>\n  );\n}\n\nexport default function GymCourtReport() {\n  return (\n    <div className=\"report\" dir=\"rtl\" style={{ padding: '20px' }}>\n      <h1>דו\"ח RPE - חדר כושר ומגרש</h1>\n      <RPEBlock title=\"🏋️ חדר כושר (Gym)\" url={`${SHEET_BASE}/Gym`} field=\"RPE בחדר כושר\" />\n      <RPEBlock title=\"🏀 מגרש (Court)\" url={`${SHEET_BASE}/Court`} field=\"RPE במגרש\" />\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}