{"ast":null,"code":"var _jsxFileName = \"/Users/matarsarfati/Downloads/basketball-minutes-fixed/src/WellnessReport.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WellnessReport() {\n  _s();\n  const [data, setData] = useState([]);\n  const [averagesByDate, setAveragesByDate] = useState({});\n  const [rollingAverages, setRollingAverages] = useState([]);\n  const [customAverage, setCustomAverage] = useState(null);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const sheetUrl = \"https://opensheet.elk.sh/1x1e53gsx3VzEJ5ON5QOvYeJTGI8auMtSxJYYpUUmreY/Wallnes\";\n  useEffect(() => {\n    fetch(sheetUrl).then(res => res.json()).then(json => {\n      const parsed = json.map(entry => ({\n        name: entry[\"Name\"],\n        date: parseDate(entry[\"Timestamp\"]),\n        sleep: Number(entry[\"What is the quality of your sleep at night?\"]),\n        fatigue: Number(entry[\"How Fatigued are you?\"]),\n        sore: Number(entry[\"How sore are you?\"])\n      })).filter(e => !isNaN(e.date));\n      setData(parsed);\n      const groupedByDate = {};\n      parsed.forEach(entry => {\n        const d = entry.date.toISOString().split('T')[0];\n        if (!groupedByDate[d]) groupedByDate[d] = [];\n        groupedByDate[d].push(entry);\n      });\n      const dailyAverages = {};\n      for (const date in groupedByDate) {\n        const entries = groupedByDate[date];\n        const sleepAvg = average(entries.map(e => e.sleep));\n        const fatigueAvg = average(entries.map(e => e.fatigue));\n        const soreAvg = average(entries.map(e => e.sore));\n        dailyAverages[date] = {\n          sleep: sleepAvg,\n          fatigue: fatigueAvg,\n          sore: soreAvg\n        };\n      }\n      setAveragesByDate(dailyAverages);\n      const sortedDates = Object.keys(dailyAverages).sort((a, b) => new Date(a) - new Date(b));\n      const rolling = sortedDates.map((_, i) => {\n        const recent = sortedDates.slice(Math.max(0, i - 7), i + 1);\n        const values = recent.map(d => dailyAverages[d]);\n        return {\n          date: sortedDates[i],\n          sleep: average(values.map(v => v.sleep)),\n          fatigue: average(values.map(v => v.fatigue)),\n          sore: average(values.map(v => v.sore))\n        };\n      });\n      setRollingAverages(rolling);\n    });\n  }, []);\n  function parseDate(dateString) {\n    const [day, month, yearAndTime] = dateString.split('/');\n    const [year, time] = yearAndTime.split(' ');\n    return new Date(`${year}-${month}-${day}T${time}`);\n  }\n  function average(arr) {\n    const valid = arr.filter(n => !isNaN(n));\n    if (valid.length === 0) return 'אין נתונים';\n    return (valid.reduce((a, b) => a + b, 0) / valid.length).toFixed(1);\n  }\n  function handleCustomRange() {\n    if (!startDate || !endDate) return;\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const relevant = data.filter(entry => entry.date >= start && entry.date <= end);\n    const sleep = average(relevant.map(e => e.sleep));\n    const fatigue = average(relevant.map(e => e.fatigue));\n    const sore = average(relevant.map(e => e.sore));\n    setCustomAverage({\n      sleep,\n      fatigue,\n      sore\n    });\n  }\n  const lastNDays = n => {\n    const today = new Date();\n    const dates = Object.keys(averagesByDate).filter(d => {\n      const date = new Date(d);\n      return date <= today && date >= new Date(today.getTime() - n * 24 * 60 * 60 * 1000);\n    });\n    const values = dates.map(d => averagesByDate[d]);\n    return {\n      sleep: average(values.map(v => v.sleep)),\n      fatigue: average(values.map(v => v.fatigue)),\n      sore: average(values.map(v => v.sore))\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wellness-report\",\n    dir: \"rtl\",\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u05D3\\u05D5\\u05D7 Wellness\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u05DE\\u05DE\\u05D5\\u05E6\\u05E2 \\u05E7\\u05D1\\u05D5\\u05E6\\u05EA\\u05D9 - \\u05DC\\u05E4\\u05D9 \\u05D9\\u05D5\\u05DD (8 \\u05D9\\u05DE\\u05D9\\u05DD \\u05D0\\u05D7\\u05E8\\u05D5\\u05E0\\u05D9\\u05DD)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"8\",\n      style: {\n        borderCollapse: \"collapse\",\n        width: \"100%\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05EA\\u05D0\\u05E8\\u05D9\\u05DA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05E9\\u05D9\\u05E0\\u05D4 \\uD83D\\uDCA4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05E2\\u05D9\\u05D9\\u05E4\\u05D5\\u05EA \\uD83D\\uDE34\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05DB\\u05D0\\u05D1\\u05D9 \\u05E9\\u05E8\\u05D9\\u05E8\\u05D9\\u05DD \\uD83D\\uDCAA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.entries(averagesByDate).sort((a, b) => new Date(b[0]) - new Date(a[0])).slice(0, 8).map(([date, avg]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: avg.sleep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: avg.fatigue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: avg.sore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)]\n        }, date, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u05DE\\u05DE\\u05D5\\u05E6\\u05E2 \\u05E7\\u05D1\\u05D5\\u05E6\\u05EA\\u05D9 \\u05DE\\u05EA\\u05D2\\u05DC\\u05D2\\u05DC (8 \\u05D9\\u05DE\\u05D9\\u05DD \\u05D0\\u05D7\\u05E8\\u05D5\\u05E0\\u05D9\\u05DD)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"8\",\n      style: {\n        borderCollapse: \"collapse\",\n        width: \"100%\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05EA\\u05D0\\u05E8\\u05D9\\u05DA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05E9\\u05D9\\u05E0\\u05D4 \\uD83D\\uDCA4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05E2\\u05D9\\u05D9\\u05E4\\u05D5\\u05EA \\uD83D\\uDE34\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u05DB\\u05D0\\u05D1\\u05D9 \\u05E9\\u05E8\\u05D9\\u05E8\\u05D9\\u05DD \\uD83D\\uDCAA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rollingAverages.slice(-8).map((entry, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.sleep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.fatigue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.sore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u05DE\\u05DE\\u05D5\\u05E6\\u05E2\\u05D9\\u05DD \\u05E7\\u05D1\\u05D5\\u05E6\\u05EA\\u05D9\\u05D9\\u05DD: 3, 5 \\u05D5-8 \\u05D9\\u05DE\\u05D9\\u05DD \\u05D0\\u05D7\\u05E8\\u05D5\\u05E0\\u05D9\\u05DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"3 \\u05D9\\u05DE\\u05D9\\u05DD \\u05D0\\u05D7\\u05E8\\u05D5\\u05E0\\u05D9\\u05DD - \\u05E9\\u05D9\\u05E0\\u05D4: \", lastNDays(3).sleep, \", \\u05E2\\u05D9\\u05D9\\u05E4\\u05D5\\u05EA: \", lastNDays(3).fatigue, \", \\u05E9\\u05E8\\u05D9\\u05E8\\u05D9\\u05DD: \", lastNDays(3).sore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"5 \\u05D9\\u05DE\\u05D9\\u05DD \\u05D0\\u05D7\\u05E8\\u05D5\\u05E0\\u05D9\\u05DD - \\u05E9\\u05D9\\u05E0\\u05D4: \", lastNDays(5).sleep, \", \\u05E2\\u05D9\\u05D9\\u05E4\\u05D5\\u05EA: \", lastNDays(5).fatigue, \", \\u05E9\\u05E8\\u05D9\\u05E8\\u05D9\\u05DD: \", lastNDays(5).sore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"8 \\u05D9\\u05DE\\u05D9\\u05DD \\u05D0\\u05D7\\u05E8\\u05D5\\u05E0\\u05D9\\u05DD - \\u05E9\\u05D9\\u05E0\\u05D4: \", lastNDays(8).sleep, \", \\u05E2\\u05D9\\u05D9\\u05E4\\u05D5\\u05EA: \", lastNDays(8).fatigue, \", \\u05E9\\u05E8\\u05D9\\u05E8\\u05D9\\u05DD: \", lastNDays(8).sore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u05DE\\u05DE\\u05D5\\u05E6\\u05E2 \\u05DC\\u05E4\\u05D9 \\u05D8\\u05D5\\u05D5\\u05D7 \\u05EA\\u05D0\\u05E8\\u05D9\\u05DB\\u05D9\\u05DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u05DE\\u05EA\\u05D0\\u05E8\\u05D9\\u05DA: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        marginInlineStart: '10px'\n      },\n      children: [\"\\u05E2\\u05D3 \\u05EA\\u05D0\\u05E8\\u05D9\\u05DA: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: endDate,\n        onChange: e => setEndDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCustomRange,\n      style: {\n        marginInlineStart: '10px'\n      },\n      children: \"\\u05D7\\u05E9\\u05D1 \\u05DE\\u05DE\\u05D5\\u05E6\\u05E2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), customAverage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\u05DE\\u05DE\\u05D5\\u05E6\\u05E2 \\u05D1\\u05D8\\u05D5\\u05D5\\u05D7 \\u05D4\\u05E0\\u05D1\\u05D7\\u05E8:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u05E9\\u05D9\\u05E0\\u05D4: \", customAverage.sleep]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u05E2\\u05D9\\u05D9\\u05E4\\u05D5\\u05EA: \", customAverage.fatigue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u05DB\\u05D0\\u05D1\\u05D9 \\u05E9\\u05E8\\u05D9\\u05E8\\u05D9\\u05DD: \", customAverage.sore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(WellnessReport, \"U+rk5dXOyITM3k+eYBzQPaogloU=\");\n_c = WellnessReport;\nexport default WellnessReport;\nvar _c;\n$RefreshReg$(_c, \"WellnessReport\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","WellnessReport","_s","data","setData","averagesByDate","setAveragesByDate","rollingAverages","setRollingAverages","customAverage","setCustomAverage","startDate","setStartDate","endDate","setEndDate","sheetUrl","fetch","then","res","json","parsed","map","entry","name","date","parseDate","sleep","Number","fatigue","sore","filter","e","isNaN","groupedByDate","forEach","d","toISOString","split","push","dailyAverages","entries","sleepAvg","average","fatigueAvg","soreAvg","sortedDates","Object","keys","sort","a","b","Date","rolling","_","i","recent","slice","Math","max","values","v","dateString","day","month","yearAndTime","year","time","arr","valid","n","length","reduce","toFixed","handleCustomRange","start","end","relevant","lastNDays","today","dates","getTime","className","dir","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","border","cellPadding","borderCollapse","width","textAlign","avg","type","value","onChange","target","marginInlineStart","onClick","marginTop","_c","$RefreshReg$"],"sources":["/Users/matarsarfati/Downloads/basketball-minutes-fixed/src/WellnessReport.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction WellnessReport() {\n  const [data, setData] = useState([]);\n  const [averagesByDate, setAveragesByDate] = useState({});\n  const [rollingAverages, setRollingAverages] = useState([]);\n  const [customAverage, setCustomAverage] = useState(null);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  const sheetUrl = \"https://opensheet.elk.sh/1x1e53gsx3VzEJ5ON5QOvYeJTGI8auMtSxJYYpUUmreY/Wallnes\";\n\n  useEffect(() => {\n    fetch(sheetUrl)\n      .then(res => res.json())\n      .then(json => {\n        const parsed = json.map(entry => ({\n          name: entry[\"Name\"],\n          date: parseDate(entry[\"Timestamp\"]),\n          sleep: Number(entry[\"What is the quality of your sleep at night?\"]),\n          fatigue: Number(entry[\"How Fatigued are you?\"]),\n          sore: Number(entry[\"How sore are you?\"])\n        })).filter(e => !isNaN(e.date));\n\n        setData(parsed);\n\n        const groupedByDate = {};\n        parsed.forEach(entry => {\n          const d = entry.date.toISOString().split('T')[0];\n          if (!groupedByDate[d]) groupedByDate[d] = [];\n          groupedByDate[d].push(entry);\n        });\n\n        const dailyAverages = {};\n        for (const date in groupedByDate) {\n          const entries = groupedByDate[date];\n          const sleepAvg = average(entries.map(e => e.sleep));\n          const fatigueAvg = average(entries.map(e => e.fatigue));\n          const soreAvg = average(entries.map(e => e.sore));\n          dailyAverages[date] = {\n            sleep: sleepAvg,\n            fatigue: fatigueAvg,\n            sore: soreAvg\n          };\n        }\n        setAveragesByDate(dailyAverages);\n\n        const sortedDates = Object.keys(dailyAverages).sort((a, b) => new Date(a) - new Date(b));\n        const rolling = sortedDates.map((_, i) => {\n          const recent = sortedDates.slice(Math.max(0, i - 7), i + 1);\n          const values = recent.map(d => dailyAverages[d]);\n          return {\n            date: sortedDates[i],\n            sleep: average(values.map(v => v.sleep)),\n            fatigue: average(values.map(v => v.fatigue)),\n            sore: average(values.map(v => v.sore))\n          };\n        });\n        setRollingAverages(rolling);\n      });\n  }, []);\n\n  function parseDate(dateString) {\n    const [day, month, yearAndTime] = dateString.split('/');\n    const [year, time] = yearAndTime.split(' ');\n    return new Date(`${year}-${month}-${day}T${time}`);\n  }\n\n  function average(arr) {\n    const valid = arr.filter(n => !isNaN(n));\n    if (valid.length === 0) return 'אין נתונים';\n    return (valid.reduce((a, b) => a + b, 0) / valid.length).toFixed(1);\n  }\n\n  function handleCustomRange() {\n    if (!startDate || !endDate) return;\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const relevant = data.filter(entry => entry.date >= start && entry.date <= end);\n    const sleep = average(relevant.map(e => e.sleep));\n    const fatigue = average(relevant.map(e => e.fatigue));\n    const sore = average(relevant.map(e => e.sore));\n    setCustomAverage({ sleep, fatigue, sore });\n  }\n\n  const lastNDays = (n) => {\n    const today = new Date();\n    const dates = Object.keys(averagesByDate)\n      .filter(d => {\n        const date = new Date(d);\n        return date <= today && date >= new Date(today.getTime() - (n * 24 * 60 * 60 * 1000));\n      });\n    const values = dates.map(d => averagesByDate[d]);\n    return {\n      sleep: average(values.map(v => v.sleep)),\n      fatigue: average(values.map(v => v.fatigue)),\n      sore: average(values.map(v => v.sore))\n    };\n  };\n\n  return (\n    <div className=\"wellness-report\" dir=\"rtl\" style={{ padding: '20px' }}>\n      <h1>דוח Wellness</h1>\n\n      <h2>ממוצע קבוצתי - לפי יום (8 ימים אחרונים)</h2>\n      <table border=\"1\" cellPadding=\"8\" style={{ borderCollapse: \"collapse\", width: \"100%\", textAlign: \"center\" }}>\n        <thead>\n          <tr>\n            <th>תאריך</th>\n            <th>שינה 💤</th>\n            <th>עייפות 😴</th>\n            <th>כאבי שרירים 💪</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.entries(averagesByDate)\n            .sort((a, b) => new Date(b[0]) - new Date(a[0]))\n            .slice(0, 8)\n            .map(([date, avg]) => (\n              <tr key={date}>\n                <td>{date}</td>\n                <td>{avg.sleep}</td>\n                <td>{avg.fatigue}</td>\n                <td>{avg.sore}</td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n\n      <h2>ממוצע קבוצתי מתגלגל (8 ימים אחרונים)</h2>\n      <table border=\"1\" cellPadding=\"8\" style={{ borderCollapse: \"collapse\", width: \"100%\", textAlign: \"center\" }}>\n        <thead>\n          <tr>\n            <th>תאריך</th>\n            <th>שינה 💤</th>\n            <th>עייפות 😴</th>\n            <th>כאבי שרירים 💪</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rollingAverages.slice(-8).map((entry, i) => (\n            <tr key={i}>\n              <td>{entry.date}</td>\n              <td>{entry.sleep}</td>\n              <td>{entry.fatigue}</td>\n              <td>{entry.sore}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <h3>ממוצעים קבוצתיים: 3, 5 ו-8 ימים אחרונים</h3>\n      <ul>\n        <li>3 ימים אחרונים - שינה: {lastNDays(3).sleep}, עייפות: {lastNDays(3).fatigue}, שרירים: {lastNDays(3).sore}</li>\n        <li>5 ימים אחרונים - שינה: {lastNDays(5).sleep}, עייפות: {lastNDays(5).fatigue}, שרירים: {lastNDays(5).sore}</li>\n        <li>8 ימים אחרונים - שינה: {lastNDays(8).sleep}, עייפות: {lastNDays(8).fatigue}, שרירים: {lastNDays(8).sore}</li>\n      </ul>\n\n      <h2>ממוצע לפי טווח תאריכים</h2>\n      <label>\n        מתאריך: <input type=\"date\" value={startDate} onChange={e => setStartDate(e.target.value)} />\n      </label>\n      <label style={{ marginInlineStart: '10px' }}>\n        עד תאריך: <input type=\"date\" value={endDate} onChange={e => setEndDate(e.target.value)} />\n      </label>\n      <button onClick={handleCustomRange} style={{ marginInlineStart: '10px' }}>חשב ממוצע</button>\n\n      {customAverage && (\n        <div style={{ marginTop: '20px' }}>\n          <h4>ממוצע בטווח הנבחר:</h4>\n          <p>שינה: {customAverage.sleep}</p>\n          <p>עייפות: {customAverage.fatigue}</p>\n          <p>כאבי שרירים: {customAverage.sore}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default WellnessReport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}