{"ast":null,"code":"var _jsxFileName = \"/Users/matarsarfati/Downloads/basketball-minutes-fixed/src/ExerciseLibrary.js\";\n// ExerciseLibrary.js\nimport React from 'react';\nimport './ExerciseLibrary.css';\nimport frontSquat from './images/front-squat.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst exerciseData = [{\n  muscle: \"Legs\",\n  exercises: [{\n    name: \"Front Squat\",\n    image: frontSquat\n  }, {\n    name: \"Lunges\",\n    image: null\n  }, {\n    name: \"Leg Press\",\n    image: null\n  }, {\n    name: \"Leg Curl\",\n    image: null\n  }]\n}, {\n  muscle: \"Back\",\n  exercises: [{\n    name: \"Pull-Up\",\n    image: null\n  }, {\n    name: \"Deadlift\",\n    image: null\n  }, {\n    name: \"Row\",\n    image: null\n  }, {\n    name: \"Lat Pulldown\",\n    image: null\n  }]\n}, {\n  muscle: \"Chest\",\n  exercises: [{\n    name: \"Push-Up\",\n    image: null\n  }, {\n    name: \"Bench Press\",\n    image: null\n  }, {\n    name: \"Incline Press\",\n    image: null\n  }, {\n    name: \"Chest Fly\",\n    image: null\n  }]\n}];\nexport default function ExerciseLibrary() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    dir: \"rtl\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Exercise Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"exercise-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [Array.from({\n            length: Math.max(...exerciseData.map(g => g.exercises.length))\n          }, (_, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\"#\", i + 1]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)).reverse(), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Muscle Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: exerciseData.map((group, index) => {\n          const exercisesReversed = group.exercises.slice().reverse();\n          const emptyCells = Math.max(...exerciseData.map(g => g.exercises.length)) - exercisesReversed.length;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [Array.from({\n              length: emptyCells\n            }).map((_, idx) => /*#__PURE__*/_jsxDEV(\"td\", {}, `empty-${idx}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)), exercisesReversed.map((exercise, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: group.exercises.length - i\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 26\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: exercise.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this), exercise.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: exercise.image,\n                alt: exercise.name,\n                className: \"exercise-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-image\",\n                children: \"No image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 23\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"muscle-cell\",\n              children: group.muscle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_c = ExerciseLibrary;\nvar _c;\n$RefreshReg$(_c, \"ExerciseLibrary\");","map":{"version":3,"names":["React","frontSquat","jsxDEV","_jsxDEV","exerciseData","muscle","exercises","name","image","ExerciseLibrary","style","padding","dir","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Array","from","length","Math","max","map","g","_","i","reverse","group","index","exercisesReversed","slice","emptyCells","idx","exercise","src","alt","_c","$RefreshReg$"],"sources":["/Users/matarsarfati/Downloads/basketball-minutes-fixed/src/ExerciseLibrary.js"],"sourcesContent":["// ExerciseLibrary.js\nimport React from 'react';\nimport './ExerciseLibrary.css';\nimport frontSquat from './images/front-squat.jpg';\n\nconst exerciseData = [\n  {\n    muscle: \"Legs\",\n    exercises: [\n      { name: \"Front Squat\", image: frontSquat },\n      { name: \"Lunges\", image: null },\n      { name: \"Leg Press\", image: null },\n      { name: \"Leg Curl\", image: null }\n    ]\n  },\n  {\n    muscle: \"Back\",\n    exercises: [\n      { name: \"Pull-Up\", image: null },\n      { name: \"Deadlift\", image: null },\n      { name: \"Row\", image: null },\n      { name: \"Lat Pulldown\", image: null }\n    ]\n  },\n  {\n    muscle: \"Chest\",\n    exercises: [\n      { name: \"Push-Up\", image: null },\n      { name: \"Bench Press\", image: null },\n      { name: \"Incline Press\", image: null },\n      { name: \"Chest Fly\", image: null }\n    ]\n  }\n];\n\nexport default function ExerciseLibrary() {\n  return (\n    <div style={{ padding: \"20px\" }} dir=\"rtl\">\n      <h1>Exercise Library</h1>\n      <table className=\"exercise-table\">\n        <thead>\n          <tr>\n            {Array.from({ length: Math.max(...exerciseData.map(g => g.exercises.length)) }, (_, i) => (\n              <th key={i}>#{i + 1}</th>\n            )).reverse()}\n            <th>Muscle Group</th>\n          </tr>\n        </thead>\n        <tbody>\n          {exerciseData.map((group, index) => {\n            const exercisesReversed = group.exercises.slice().reverse();\n            const emptyCells = Math.max(...exerciseData.map(g => g.exercises.length)) - exercisesReversed.length;\n\n            return (\n              <tr key={index}>\n                {Array.from({ length: emptyCells }).map((_, idx) => (\n                  <td key={`empty-${idx}`}></td>\n                ))}\n                {exercisesReversed.map((exercise, i) => (\n                  <td key={i}>\n                    <div><strong>{group.exercises.length - i}</strong></div>\n                    <div>{exercise.name}</div>\n                    {exercise.image ? (\n                      <img\n                        src={exercise.image}\n                        alt={exercise.name}\n                        className=\"exercise-image\"\n                      />\n                    ) : (\n                      <div className=\"no-image\">No image</div>\n                    )}\n                  </td>\n                ))}\n                <td className=\"muscle-cell\">{group.muscle}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}